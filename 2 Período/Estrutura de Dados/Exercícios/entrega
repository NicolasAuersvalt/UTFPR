// Par_Impar

#include "queue.h"
#include <time.h>


int main () {
  srand(time(NULL));
  int i=0, n = 10;	
  Queue *par = create(n);
  Queue *impar = create(n);
  while(i<n){
    int sorteio = rand() % 100;
    if((sorteio%2)==0)
      enqueue(par, sorteio);
    else
      enqueue(impar, sorteio);
    i++;
  }
  print(par);  
  print(impar);
  destroy(par);
  destroy(impar);

  return 0;
}



// Jackpot

#include "queue.h"
#include <time.h>

void jackpot (int n, int r) {
  /*Terminar*/

  int i, encontrou = 1, pri, sec, ter, elem;

  // Gera-se 3 filas

  // 3 Carretéis fixos, não n carretéis
  Queue *carretel1, *carretel2, *carretel3;

  carretel1 = create(r);
  carretel2 = create(r);
  carretel3 = create(r);

  for(i=0; i<r-1; i++){
    enqueue(carretel1, i);
    enqueue(carretel2, i);
    enqueue(carretel3, i);
  }

  while(encontrou){

    // Variáveis de apoio

    pri = rand() % 10;
    sec = rand() % 10;
    ter = rand() % 10;

    // print

    for(i=0; i<pri; i++){
      elem = dequeue(carretel1);

      enqueue(carretel1, elem);
    }
    for(i=0; i<sec; i++){
      elem = dequeue(carretel2);

      enqueue(carretel2, elem);
    }
    for(i=0; i<ter; i++){
      elem = dequeue(carretel3);

      enqueue(carretel3, elem);
    }

    // Substitui o valor das variáveis de apoio

    pri = front(carretel1);
    sec = front(carretel2);
    ter = front(carretel3);

    printf("\n%d %d %d", pri, sec, ter);

    if((pri == sec) && (sec==ter)){
      printf(" -> Ganhou!");
      encontrou = 0;
    }
  }  
}

int main () {
  srand(time(NULL));	
  int n = 3;  /*número de carretéis*/ 
  int r = 10; /*sequência de números em cada carretel*/ 
  jackpot (n, r);
}
