/* sum */


#include "list.h"

/* */
int sum (List *l) {

  if(l==NULL)
    return 0;

  else
    return l->data + sum(l->next);

}



/* size */


#include "list.h"

/* */
int size (List *l) {
  if(l==NULL){
    return 0;
  }
  else{
    return 1 + size(l->next);

  }
}


/* in */

#include "list.h"
#include <limits.h>

/* */
int in (List *l, int k) {

  if(l==NULL){
    return 0; // NÃO ENCONTROU
  }
  else{
    if(l->data == k){ // Encontrou
      return 1;
    }
    else{
      return in(l->next, k);
    }
  }
}


/* position */

/* */
int position (List *l, int k) {

  if(l!=NULL){
    if(l->data == k){
      return 1;
    }

    int r = (position(l->next, k));

    if(r==-1){
      return -1;
    }
    else{
      return r+1;
    }
  }
  else{ // Não Encontrou
    return -1;
  }
}




/* merge */


/* */
List* merge (List *A, List *B) {
  if(A == NULL){
    return B;
  }
  if(B == NULL){
    return A;
  }
  if(A->data > B->data){ // A > B -> A fica

    B->next = merge(A, B->next);

    return B;

  }
  else if(A->data < B->data){ // A < B -> B fica

    A->next = merge(A->next, B);

    return A;


  }
}